#pragma checksum "C:\Users\Luqueta\Documents\Projeto WEB FTEC\Ftec.ProjetoWeb.GitHub\ProjectFacul\ProjectFacul\Views\Home\Home.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "50f00587e74d9a720cd1f02a45de1d7d10724c1c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Home), @"mvc.1.0.view", @"/Views/Home/Home.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Luqueta\Documents\Projeto WEB FTEC\Ftec.ProjetoWeb.GitHub\ProjectFacul\ProjectFacul\Views\_ViewImports.cshtml"
using ProjectFacul.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Luqueta\Documents\Projeto WEB FTEC\Ftec.ProjetoWeb.GitHub\ProjectFacul\ProjectFacul\Views\_ViewImports.cshtml"
using ProjectFacul;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50f00587e74d9a720cd1f02a45de1d7d10724c1c", @"/Views/Home/Home.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e519e95b8ea9720d97ed33f6003a2380263e684", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Home : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/css/styles.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/js/scripts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/assets/demo/chart-area-demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/assets/demo/chart-bar-demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/js/datatables-simple-demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("sb-nav-fixed"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\n<html lang=\"en\">\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c6441", async() => {
                WriteLiteral("\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n    <meta name=\"description\"");
                BeginWriteAttribute("content", " content=\"", 250, "\"", 260, 0);
                EndWriteAttribute();
                WriteLiteral(" />\n    <meta name=\"author\"");
                BeginWriteAttribute("content", " content=\"", 288, "\"", 298, 0);
                EndWriteAttribute();
                WriteLiteral(" />\n    <title>");
#nullable restore
#line 9 "C:\Users\Luqueta\Documents\Projeto WEB FTEC\Ftec.ProjetoWeb.GitHub\ProjectFacul\ProjectFacul\Views\Home\Home.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" - Projeto Praga</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css\" rel=\"stylesheet\" />\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "50f00587e74d9a720cd1f02a45de1d7d10724c1c7685", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js\" crossorigin=\"anonymous\"></script>\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c9693", async() => {
                WriteLiteral(@"
    <nav class=""sb-topnav navbar navbar-expand navbar-dark bg-dark"">
        <!-- Navbar Brand-->
        <a class=""navbar-brand ps-3"" href=""index.html"">Home</a>
        <!-- Sidebar Toggle-->
        <button class=""btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0"" id=""sidebarToggle"" href=""#!""><i class=""fas fa-bars"" tooltip=""Abrir abas lateral""></i></button>
    </nav>
    <div id=""layoutSidenav"">
        <div id=""layoutSidenav_nav"">
            <nav class=""sb-sidenav accordion sb-sidenav-dark"" id=""sidenavAccordion"">
                <div class=""sb-sidenav-menu"">
                    <div class=""nav"">
                        <div class=""sb-sidenav-menu-heading"">Menu</div>
                        <a class=""nav-link""");
                BeginWriteAttribute("href", " href=\"", 1412, "\"", 1419, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                            <div class=""sb-nav-link-icon""><i class=""fas fa-tachometer-alt""></i></div>
                            Podridão-de-esclerotinia
                        </a>
                    </div>
                </div>
                <div class=""sb-sidenav-footer"">
                    <div class=""small"">Logged in as:</div>
                    Start Bootstrap
                </div>
            </nav>
        </div>
        <div id=""layoutSidenav_content"">
            <main>
                <div class=""container-fluid px-4"">
                    <div class=""row"">
                        <h1>Podridao de Eclerotinia</h1>
                        <div class=""col-xl-12"">
                            <div class=""card mb-4"">
                                <div class=""card-header"">
                                    Temperatura
                                </div>
                                <div class=""card-body"">
                                    <div class=""chartjs-size-monitor"">
          ");
                WriteLiteral("                              <div class=\"chartjs-size-monitor-expand\">\n                                            <div");
                BeginWriteAttribute("class", " class=\"", 2564, "\"", 2572, 0);
                EndWriteAttribute();
                WriteLiteral(">\n                                            </div>\n                                        </div>\n                                        <div class=\"chartjs-size-monitor-shrink\">\n                                            <div");
                BeginWriteAttribute("class", " class=\"", 2803, "\"", 2811, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                                            </div>
                                        </div>
                                    </div>
                                    <!--myAreaChart-->
                                    <canvas id=""graficoTemp""
                                            width=""441""
                                            height=""176""
                                            style=""display: block;width: 441px;height: 176px;"" class=""chartjs-render-monitor"">
                                    </canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""card mb-4"">
                                <div class=""card-header"">
                                    Umidade
                                </div>
                                <canvas id=""graficoHumidade""
                                        width=""441""
                   ");
                WriteLiteral(@"                     height=""176""
                                        class=""chartjs-render-monitor""
                                        style=""
                                            display: block;
                                            width: 441px;
                                            height: 176px;"">
                                </canvas>
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""card mb-4"">
                                <div class=""card-header"">
                                    Chuvas
                                </div>
                                <canvas id=""graficoChuva""
                                        width=""441""
                                        height=""176""
                                        class=""chartjs-render-monitor""
                                        style=""
                                            display: block;
  ");
                WriteLiteral(@"                                          width: 441px;
                                            height: 176px;"">
                                </canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""idAlertas"">
                    <h1>Condições não favoráveis para infecção</h1>
                </div>
                <br />
            </main>
");
                WriteLiteral("        </div>\n    </div>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script>\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c15424", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\" crossorigin=\"anonymous\"></script>\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c16646", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c17744", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <script src=\"https://cdn.jsdelivr.net/npm/simple-datatables@latest\" crossorigin=\"anonymous\"></script>\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c18953", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50f00587e74d9a720cd1f02a45de1d7d10724c1c20051", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script>
        //temperatura
        $.ajax({
            type: ""POST"",
            url: ""/Home/RetornarDadosGraficoTemperatura"",
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (mems) {
                var aData = mems;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: ""Temperatura"",
                        data: aDatasets1,
                        fill: false,
                        borderWidth: 0.1,
                        lineTension: 0.1,
                        backgroundColor: ""rgba(2,117,216,1)"",
                        borderColor: ""rgba(255,255,255,1)"",
                        pointRadius: 6.5,
                        pointBackgroundColor: ""rgba(2,117,216,1)"",
                        pointBorderColor: ""rgba(255,255,255,0.8)"",
                        pointHove");
                WriteLiteral(@"rRadius: 5,
                        pointHoverBackgroundColor: ""rgba(2,117,216,1)"",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                    }]
                };

                var ctx = $(""#graficoTemp"").get(0).getContext(""2d"");
                var myNewChart = new Chart(ctx, {
                    type: 'line',
                    data: dataT,
                    fill: false,
                    borderWidth: 0.1,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'Gráfico de Evolução de Temperatura em Fahrenheit' },
                        legend: { position: 'bottom' },
                        padding: 0,
                        scales: {
                            xAxes: [{ gridLines: { display: true }, display: true, scaleLabel: { display: true, labelString: '' } }],
                            yAxes: [{
                                gridLines: { display: false }, display: ");
                WriteLiteral(@"true, scaleLabel: { display: true, labelString: '' },
                                ticks: { stepSize: 50, beginAtZero: true }
                            }]
                        },
                    }
                });
            }
        });

        //humidade
        $.ajax({
            type: ""POST"",
            url: ""/Home/RetornarDadosGraficoHumidade"",
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (mems) {
                var aData = mems;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: ""Humidade"",
                        data: aDatasets1,
                        fill: false,
                        borderWidth: 0.1,
                        lineTension: 0.1,
                        backgroundColor: ""rgba(2,117,216,1)"",
                        borderColor: ");
                WriteLiteral(@"""rgba(255,255,255,1)"",
                        pointRadius: 6.5,
                        pointBackgroundColor: ""rgba(2,117,216,1)"",
                        pointBorderColor: ""rgba(255,255,255,0.8)"",
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: ""rgba(2,117,216,1)"",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                    }]
                };

                var ctx = $(""#graficoHumidade"").get(0).getContext(""2d"");
                var myNewChart = new Chart(ctx, {
                    type: 'bar',
                    data: dataT,
                    fill: false,
                    borderWidth: 0.1,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'Gráfico de Evolução de Humidade' },
                        legend: { position: 'bottom' },
                        padding: 0,
                        scales: {
                          ");
                WriteLiteral(@"  xAxes: [{ gridLines: { display: true }, display: true, scaleLabel: { display: true, labelString: '' } }],
                            yAxes: [{
                                gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: '' },
                                ticks: { stepSize: 50, beginAtZero: true }
                            }]
                        },
                    }
                });
            }
        });

        //chuvas
        $.ajax({
            type: ""POST"",
            url: ""/Home/RetornarDadosGraficoChuva"",
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (mems) {
                var aData = mems;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: ""Indice Pluviometrico"",
                        data: aDatase");
                WriteLiteral(@"ts1,
                        fill: false,
                        borderWidth: 0.1,
                        lineTension: 0.1,
                        backgroundColor: ""rgba(2,117,216,1)"",
                        borderColor: ""rgba(255,255,255,1)"",
                        pointRadius: 6.5,
                        pointBackgroundColor: ""rgba(2,117,216,1)"",
                        pointBorderColor: ""rgba(255,255,255,0.8)"",
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: ""rgba(2,117,216,1)"",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                    }]
                };

                var ctx = $(""#graficoChuva"").get(0).getContext(""2d"");
                var myNewChart = new Chart(ctx, {
                    type: 'bar',
                    data: dataT,
                    fill: false,
                    borderWidth: 0.1,
                    options: {
                        responsive: true,
                     ");
                WriteLiteral(@"   title: { display: true, text: 'Gráfico de Evolução das Chuvas' },
                        legend: { position: 'bottom' },
                        padding: 0,
                        scales: {
                            xAxes: [{ gridLines: { display: true }, display: true, scaleLabel: { display: true, labelString: '' } }],
                            yAxes: [{
                                gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: '' },
                                ticks: { stepSize: 50, beginAtZero: true }
                            }]
                        },
                    }
                });
            }
        });
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
